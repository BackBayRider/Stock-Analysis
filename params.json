{
  "name": "Stock Analysis",
  "tagline": "Regression, Scrapers, and Visualization",
  "body": "# Stock Analysis\r\n\r\nThis repository contains python scripts that I am devleoping to perform analysis on stock prices and visualization of stock prices and other data such as volume.  \r\n\r\nSome of the goals I want to achieve with this project include: \r\n  - Get the data I need from Yahoo Finance or other API. Able to speicfy what I need and the time range. \r\n  - Different regression implementations on the close price data. (Linear, SVM, etc.) Possibly try to fit a polynomial function which follows the data.  \r\n  - Predicting Stock price for the next day. \r\n\r\n## Results\r\n\r\nUsing my code for linear regression and Nvidia's (NVDA) stock prices of each day. I got a slope of 0.1850399032986727 and a y intercept of 24.54867003005582. The 50.08 number is the price predicted for the next day based on the linear formula it calculated.\r\n\r\n```python\r\n[0.1850399032986727, 24.54867003005582]\r\n50.0841766853\r\n```\r\n\r\nThis is insanely accurate. I decided to compare this result with result's I would get with a widely known API, famous for machine learning and other regression tools in python. The API is called sci-kit-learn.  \r\n\r\n```python\r\n[ 0.1850399]\r\n```\r\n\r\nUsing the linear regression offered from the API We get almost the same result, except with less accuracy.  \r\n\r\nMy method outputs a number with greater significant figures. \r\n\r\n###Screenshots\r\n\r\nUsing my regression method: \r\n\r\n![Linear Regression performed on NVDA Stock dat from January 2016](/Regression/NVDA2016.png)\r\n\r\nUsing Sci-kit-learn API:\r\n\r\n![Linear Regression performed on NVDA Stock dat from January 2016](/Regression/NVDA_2016.png)\r\n\r\nThis barely makes a difference to the naked eye. The two graphs are very similar. \r\n\r\n## Version\r\n\r\n**1.0.0 - Released Stock Scraper**\r\n\r\n1.0.1 - Minor bug fixes with duplicate entries in the CSV File\r\n\r\n\r\n### Todo\r\n\r\n- SVM Regression\r\n- Use Machine Learning to predict stock close price for the next day\r\n- Algorithm for high frequency trading (UVXY - Price for this data fluctuates every minute)  \r\n\r\n\r\n#### License\r\n\r\n\r\nMIT\r\n\r\n**Free Software, Hell Yeah!**\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}